@import 'styles/globals.scss';
$errorcolor: #e00;

.ModelField {
  display: flex;
  flex-flow: row wrap;
  align-items: flex-end;
  margin-bottom: $margin;
  min-height: 1.5em;
  &.errors {
    .react-select__control,
    input,
    select,
    textarea {
      @extend %invalidinput;
    }
  }
  .FieldError {
    @extend %label;
    margin: 0.2em 0;
    min-width: 100%;
    font-weight: bold;
    color: $errorcolor;
    &:before {
      padding-right: 0.5em;
      content: 'âœ˜';
    }
  }
  .label {
    @extend %label;
    text-transform: lowercase;
    color: rgba(black, 0.6);
    min-width: 7em;
    padding-right: 0.5em;
  }
  .value {
    flex: 1;
    min-width: 50%;
    max-width: 100%;
  }
  select {
    appearance: none;
    background-image: $chevron-down-icon;
    background-position: top 50% right 0.3rem;
    background-size: 0.9rem;
    background-repeat: no-repeat;
  }
  select,
  textarea,
  input {
    @extend %input;
  }
  textarea {
    width: 100%;
    min-height: 3rem;
    resize: vertical;
  }
  &.shorttext,
  &.text {
    height: auto;
    align-items: stretch;
    flex-direction: column;
  }
  &.cropbox,
  &.pdfs,
  &.image,
  &.thumb {
    display: flex;
    flex: 1;
    flex-direction: column;
    align-items: stretch;
    .value {
      flex: 1;
    }
  }
  &.pdfs {
    .value {
      background: rgba(black, 0.15);
      display: flex;
      flex-direction: row;
      align-items: center;
      flex: 1;
      min-height: 0; // firefox
      flex-basis: 0; // firefox
      .PdfThumb {
        flex: 1;
        justify-content: center;
        height: 100%;
        display: flex;
        padding-bottom: 2.5em;
        position: relative;
        .data {
          position: absolute;
          bottom: 0;
          left: 0;
          width: 100%;
          text-align: center;
        }
      }
    }
  }
}
