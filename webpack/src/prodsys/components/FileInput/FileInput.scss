$colors: (ready: #7cb342, warn: #dd2c00, error: #dd2c00, disabled: #aaa);

.FileInputArea {
  &.dragOver {
    background-color: rgba(red, 0.8);
    &.acceptFiles {
      background-color: rgba(limegreen, 0.1);
    }
  }
  .items {
    height: 0; // keep inside parent
    display: block; // not flex â€“ enables scroll bar
  }
}

.FileInputButton {
  // button in top bar
  display: flex;
  cursor: pointer;
  input[type="file"] {
    display: none;
  }
}

.Actions {
  align-self: start;
  .Tool {
    background-color: #888;
    &.disabled {
      background-color: map-get($colors, disabled);
      color: #eee;
    }
    &.ready {
      background-color: map-get($colors, ready);
    }
    &.ok {
    }
    &.warn {
      background-color: #dd2c00;
    }
    &.error {
      background-color: #dd2c00;
    }
    &.spinning {
      background-color: #00bfa5;
    }
    font-size: 2.5rem;
    height: 2.5rem;
    width: 2.5rem;
    margin-bottom: 0.15rem;
    small {
      margin-top: -0.3em;
      padding-bottom: 0.1em;
    }
  }
}

.UploadItem {
  margin: 0.3rem;
  padding-bottom: 0.2rem;
  border-bottom: 1px solid #bbb;
  min-height: 13rem;
  max-width: 100%;
  display: grid;
  grid-template-columns: 2.5rem 2fr 3fr 2fr;
  grid-gap: 0.5rem;
  .actions {
    grid-row-start: 1;
    grid-column-start: 1;
  }
  .StaticImageData {
    grid-column-start: 2;
    display: flex;
    flex-direction: column;
    flex: 1;
    .Thumb {
      height: 5rem;
      flex-grow: 1;
    }
  }
  .UploadForm {
    grid-column-start: 3;
    display: flex;
    flex-direction: column;
    .ModelField:last-child {
      flex: 1;
    }
  }
}

.Duplicates {
  grid-column-start: 4;
  display: flex;
  flex-direction: column;
  .Duplicate {
    display: flex;
    flex-direction: column;
    flex: 1;
    &:not(:last-child) {
      padding-bottom: 0.5rem;
    }
  }
  .FlipFlop {
    display: flex;
    .flipFlopChoice {
      padding: 0.2rem;
      flex: 1;
      background-color: #666;
      color: #aaa;
    }
    .active {
      color: white;
      background-color: map-get($colors, ready);
    }
  }
}

.Fingerprint {
  image-rendering: pixelated;
  width: 20px;
  cursor: zoom-in;
  transition: transform 100ms;
  &:hover {
    transform: scale(4);
  }
}
