#!/bin/bash
# Build and demonize docker container

if [[ ! -f django/local.env ]]; then
  echo "# Add environment variables here" > django/local.env
fi

for arg; do case $arg in
  help )
    echo "usage: prod | dev | fake | fetchdb | build | webpack | up"
    exit 0
    ;;
  prod )
    echo "production settings"
    export COMPOSE_FILE=docker-compose.yml:docker-compose.production.yml
    ;;
  dev )
    echo "development settings"
    unset COMPOSE_FILE
    ;;
  fake )
    echo "populating database with fake data"
    docker-compose run --rm web django-admin fake_content -c10 -s50
    ;;
  build )
    docker-compose down
    echo "building"
    docker-compose build
    docker-compose run --rm web django-admin migrate
    docker-compose run --rm web django-admin collectstatic --noinput
    ;;
  staticfiles )
    docker-compose run --rm web django-admin collectstatic --noinput
    ;;
  migrate )
    docker-compose run --rm web django-admin migrate
    ;;
  bash )
    docker-compose run --rm web bash
    ;;
  flower )
    docker-compose run --rm -p 5555:5555 django flower
    ;;
  jupyter )
    docker-compose run --rm -p 8888:8888 django jupyter
    ;;
  test )
    docker-compose run --rm -u django web pytest
    ;;
  repl )
    docker-compose run --rm web django-admin shell_plus
    ;;
  webpack )
    docker-compose run --rm webpack build
    ;;
  up )
    echo "running webserver"
    docker-compose up
    ;;
  dumpdb )
    DUMP=$(date +"dbdump_%d-%m-%Y_%H.%M.%S.sql")
    docker-compose up -d postgres
    echo "dumping database to $DUMP"
    docker-compose exec postgres pg_dump --no-owner -U postgres -d postgres > $DUMP
    ;;
  loaddb )
    dumpfile=$(ls *.sql -1t | head -n1)
    [[ "" = $dumpfile ]] && exit 1
    echo "found database dump: $dumpfile"
    cp $dumpfile django/dbdump.sql
    # loading data
    docker-compose down
    docker-compose run --rm web load_db

    # cleanup
    rm django/dbdump.sql
    echo "done"
    ;;
  enable )
    echo "enable systemd service"
    # must run as root
    ln -s $PWD/universitas.service /lib/systemd/system/
    systemctl enable universitas.service
    systemctl start universitas.service
    ;;

esac; done
docker ps
